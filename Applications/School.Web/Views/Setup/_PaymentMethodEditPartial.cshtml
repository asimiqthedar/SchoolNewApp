@using School.Models.WebModels.PaymentMethod;
@model PaymentMethodModel

<div class="row">
    <div class="col-md-12">
        <div class="cform row gy-3">
            <input type="hidden" id="PaymentMethodId" name="PaymentMethodId" asp-for="PaymentMethodId" />
            <div class="col-xxl-6 col-md-6">
                <label class="form-label">Payment Method Category </label>
                <div class="input-group">
                    <select id="PaymentMethodCategoryId" class="form-select" aria-label="Payment Method Category"
                            asp-items="@(new SelectList(ViewBag.PaymentMethodCategoryDropdown,"Value", "Text", Model.PaymentMethodCategoryId))">
                    </select>
                </div>
            </div>
            <div class="col-xxl-6 col-md-6">
                <div>
                    <label class="form-label">Payment Method Name</label>
                    <input type="text" class="form-control textCapital" id="PaymentMethodName" name="PaymentMethodName" asp-for="PaymentMethodName" placeholder="Payment Method Name">
                </div>
            </div>
            <div class="col-xxl-6 col-md-6">
                <div>
                    <label class="form-label">Debit Account</label>
                    <input type="text" class="form-control textCapital" id="DebitAccount" name="DebitAccount" asp-for="DebitAccount" placeholder="Debit Account">
                </div>
            </div>
            <div class="col-xxl-6 col-md-6">
                <div>
                    <label class="form-label">Credit Account</label>
                    <input type="text" class="form-control textCapital" id="CreditAccount" name="CreditAccount" asp-for="CreditAccount" placeholder="Credit Account">
                </div>
            </div>
            <div class="col-md-12 text-center">
                <button class="btn btn-success theme-btn" type="button" onclick="BindData()">@(Model.PaymentMethodId > 0 ? "Update" : "Add")</button>
                <button class="btn btn-secondary" type="button" onclick="bootbox.hideAll();">Cancel</button>
            </div>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        $('.textCapital').keyup(function () {
            $(this).val($(this).val().toUpperCase());
        });
    });
    function BindData() {
        var dataObj = {
            PaymentMethodId: $("#PaymentMethodId").val(),
            PaymentMethodCategoryId: $("#PaymentMethodCategoryId").val(),
            PaymentMethodName: $("#PaymentMethodName").val(),
            DebitAccount: $("#DebitAccount").val(),
            CreditAccount: $("#CreditAccount").val()
        };
        if (Validation(dataObj)) {
            if (dataObj["PaymentMethodId"] == "0") {
                Save(dataObj);

            }
            else {
                var dlg_updatePromo = bootbox.dialog({
                    message: 'Are you sure! you want to update the record?',
                    title: 'Confirm',
                    buttons: {
                        ok: {
                            label: "Yes",
                            className: 'btn-primary',
                            callback: function () {
                                Save(dataObj);
                            }
                        },
                        cancel: {
                            label: "No",
                            className: 'btn-danger',
                            callback: function () {
                                $(dlg_updatePromo).modal('hide');
                            }
                        }
                    }
                });
                dlg_updatePromo.find('.modal-header').css('background-color', '#dc3545').css('border-bottom', '1px solid #dc3545');
            }
        }
    }
    function Validation(dataObj) {
        var isError = false;
        if (!dataObj["DebitAccount"] || !dataObj["DebitAccount"].trim()) {
            $app.notify.validate("DebitAccount", "Debit Account is required");
            isError = true;
        }
        if (!dataObj["CreditAccount"] || !dataObj["CreditAccount"].trim()) {
            $app.notify.validate("CreditAccount", "Credit Account is required");
            isError = true;
        }
        if (isError) {
            return false;
        }
        else {
            return true;
        }
    }
</script>