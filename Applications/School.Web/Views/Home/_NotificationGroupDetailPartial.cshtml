@using System.Data;
@using System.Security.Claims
@model DataSet
@{
	string IsApprover = Context?.User.FindFirstValue("IsApprover");
}
<div class="table-responsive table-card order-tabel" style="width:100%">
	<table class="table align-middle table-nowrap mb-0" id="tblActivityData">
		<thead class="table-light text-muted">
			<tr>
				<th><input type="checkbox" id="selectAllCheckbox"></th>
				<th width="10%">S.No</th>
				<th>Notification</th>
				<th>User</th>
				<th>Record Action</th>
				<th>Values</th>
				<th width=70px">#</th>
			</tr>
		</thead>
		<tbody class="list form-check-all">
				@if (Model != null && Model.Tables.Count > 0 && Model.Tables[0].Rows.Count > 0)
				{
					int i = 0;
					foreach (DataRow dr in Model.Tables[0].Rows)
					{
						i++;
					<tr>

						<th><input type="checkbox" class="rowCheckbox" data-id="@dr["NotificationGroupDetailId"]"></th>
						<td>@i</td>
						<td>@dr["NotificationType"]</td>
						<td>@dr["UserName"]</td>
						<td>@dr["RecordAction"]</td>
						<td>
							<button type="button" class="btn btn-dark btn-set-task w-sm-100" onclick="ViewJson('@dr["NotificationGroupDetailId"]')">
								View
							</button>
						</td>
						<td>
							@if (!string.IsNullOrEmpty(IsApprover) && IsApprover.ToLower().Equals("true"))
							{
								<div class="btn-group" role="group" aria-label="Basic outlined example">
									<button type="button" class="btn btn-outline-secondary edit-btn" title="Approve" onclick="Approve('@dr["NotificationGroupDetailId"]')">
										<i class="fa-solid fa-check  text-success" title="Approve"></i>
									</button>
									<button type="button" class="btn btn-outline-secondary deleterow" title="Reject" onclick="Reject('@dr["NotificationGroupDetailId"]')">
										<i class="fa-solid fa-circle-xmark text-danger" title="Reject"></i>
									</button>
								</div>
							}
						</td>
					</tr>
					}
				}
		</tbody>
	</table>
</div>
<script>
	$("#tblActivityData").DataTable({
		language: {
			search: "<i class='ri-search-line search-icon'></i>",
			searchPlaceholder: "Search ..."
		},
		pageLength: 50,
		bSort: false,

		select: {
			style: 'multi'
		},
		// Additional configuration options for DataTables
		// columnDefs: [
		//     {
		//         targets: 0,
		//         render: function (data, type, row, meta) {
		//             // Render a checkbox with value
		//             return '<input type="checkbox" value="' + row.Id + '">';
		//         }
		//     }
		// ]
	});
	$('#tblActivityData').DataTable().on('draw.dt', function () {
		var info = $('#tblActivityData').DataTable().page.info();
		$('#tblActivityData').DataTable().column(1, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
			cell.innerHTML = i + 1;// cell.innerHTML = i + 1 + info.start;
		});
	});
	$('#selectAllCheckbox').change(function () {
		var isChecked = $(this).is(':checked');
		$('#tblActivityData tbody input[type="checkbox"]').prop('checked', isChecked);
	});
</script>