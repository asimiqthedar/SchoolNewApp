@using System.Data;
@model DataSet;
<div class="table-responsive">
    <table class="table align-middle table-nowrap mb-0" id="tblAdvanceFeeTuitionRevenue">
        <thead class="table-light text-muted">
            <tr>
                <th class="text-center" style="width: 5%">S.No</th>
                <th>Parent Id</th>
                <th>Parent Name</th>
                <th>Father Iqama No.</th>
                <th>Parent Mobile</th>
                <th>Student Id</th>
                <th>Student Name</th>
                <th>Grade</th>
                <th>Cost Center</th>
                <th>Academic Year</th>
                <th>Staff</th>
                <th>Invoice Type</th>
                <th>Invoice No</th>
                <th>Date</th>
                <th>Payment Method</th>
                <th>Invoice Ref No</th>
                <th class="text-end">Taxable Amount</th>
                <th class="text-end">Tax Amount</th>
                <th class="text-end">Item Subtotal</th>
            </tr>
        </thead>
        <tbody class="list form-check-all">
            @if (Model != null && Model.Tables.Count > 0 && Model.Tables[0].Rows.Count > 0)
            {
                int i = 0;
                foreach (DataRow dr in Model.Tables[0].Rows)
                {
                    i++;
                    <tr class="@(!string.IsNullOrEmpty(Convert.ToString(dr["ParentId"]).Trim()) ? "" : "total")">
                        <td class="text-center">@(!string.IsNullOrEmpty(Convert.ToString(dr["ParentId"]).Trim()) ? (i - 1) : "")</td>
                        <td>@dr["ParentId"]</td>
                        <td>@dr["ParentName"]</td>
                        <td>@dr["IqamaNumber"]</td>
                        <td>@dr["FatherMobile"]</td>
                        <td>@dr["StudentId"]</td>
                        <td>@dr["StudentName"]</td>
                        <td>@dr["GradeName"]</td>
                        <td>@dr["CostCenter"]</td>
                        <td>@dr["AcademicYear"]</td>
                        <td>@dr["IsStaff"]</td>
                        <td>@dr["InvoiceType"]</td>
                        <td>@dr["InvoiceNo"]</td>
                        <td>@dr["InvoiceDate"]</td> 
                        <td>@dr["PaymentMethod"]</td>
                        <td>@dr["InvoiceRefNo"]</td>
                        <td class="text-end">@Convert.ToDecimal(dr["TaxableAmount"]).ToTwoDecimalString()</td>
                        <td class="text-end">@Convert.ToDecimal(dr["TaxAmount"]).ToTwoDecimalString()</td>
                        <td class="text-end">@Convert.ToDecimal(dr["ItemSubtotal"]).ToTwoDecimalString()</td>
                    </tr>
                }
            }
        </tbody>
        @*  <tfoot>
        <tr>
        <th colspan="8" class="text-end">Total Balance:</th>
        <th class="text-end" id="totalBalanceAmount"></th>
        </tr>
        </tfoot> *@
    </table>
</div>

<script>
    $(document).ready(function () {
        var table = $('#tblAdvanceFeeTuitionRevenue').DataTable({
            language: {
                search: "<i class='ri-search-line search-icon'></i>",
                searchPlaceholder: "Search ..."
            },
            pageLength: 50,
            ordering: true,
            responsive: true,
            columnDefs: [
                { orderable: false, targets: 0 }
            ],
            drawCallback: function (settings) {
                var api = this.api();
                var info = api.page.info();
                api.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
                    cell.innerHTML = i + 1;// cell.innerHTML = i + 1 + info.start;
                });
                // Calculate and display totals
                // var totalFeeAmount = api
                //     .column(7, { search: 'applied' })
                //     .data()
                //     .reduce(function (a, b) {
                //         return parseFloat(a) + parseFloat(b.replace(/[^\d.-]/g, ''));
                //     }, 0);

                // var totalPaidAmount = api
                //     .column(8, { search: 'applied' })
                //     .data()
                //     .reduce(function (a, b) {
                //         return parseFloat(a) + parseFloat(b.replace(/[^\d.-]/g, ''));
                //     }, 0);

                // var totalPaidAmount = api
                //     .column(8, { search: 'applied' })
                //     .data()
                //     .reduce(function (a, b) {
                //         return parseFloat(a) + parseFloat(b.replace(/[^\d.-]/g, ''));
                //     }, 0);

                // var totalBalance = totalFeeAmount - totalPaidAmount

                // $('#totalBalanceAmount').html(totalBalance.toFixed(2));
            }
        });
    });
</script>