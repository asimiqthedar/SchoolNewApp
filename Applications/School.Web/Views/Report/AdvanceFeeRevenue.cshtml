@{
    ViewData["Title"] = "Report";
}

<div class="row">
    <div class="col-12">
        <div class="page-title-box d-sm-flex align-items-center justify-content-between">
            <div class="page-title d-flex align-items-center justify-content-between">
                <ol class="breadcrumb m-0">
                    <li class="breadcrumb-item">Report</li>
                    <li class="breadcrumb-item active">Advance Fee Revenue List</li>
                </ol>
                <div>
                <button type="button" class="btn btn-secondary" onclick="ExportCSVStatement()">
                <i class="fa-solid fa-file-excel"></i> Export to Excel
                </button>
                </div> 
            </div>
        </div>
    </div>
</div>
<div class="card">
    <div class="card-body">
        <div style="margin-bottom:10px;">
            <button class="btn btn-dark btn-warning w-sm-100" type="button" data-bs-toggle="collapse" data-bs-target="#filterCollapse" aria-expanded="false" aria-controls="filterCollapse">
                <i class="mx-1 fa-solid fa-filter"></i>Filter
            </button>
        </div>
        <div class="collapse" id="filterCollapse">
            @Html.Partial("_AdvanceTuitionRevenueFilterPartial")
        </div>
        <div class="row g-3">
            <div class="col-lg-12 col-md-12">
                <div class="tab-content screen-list">
                    <div class="tab-pane fade show active" id="advance-revenue-report-load">
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section scripts {
    <script>
        $(function () {
            $('.datepicker').datepicker({
                format: "dd/mm/yyyy",
                autoclose: true
            });
            $("#filterAcademicYear").prop("selectedIndex", 1);
            var lastMonthDate = new Date();
            lastMonthDate.setMonth(lastMonthDate.getMonth() - 1);

            $('#filterStartDate').datepicker('update', lastMonthDate);
            $('#filterEndDate').datepicker('update', new Date());

            loadCurrentAcademicYear();
        });

        function loadCurrentAcademicYear() {
			var urlToCall = baseUrl + 'Report/GetCurrentAcademicYear';
			$app.post(urlToCall).then(function (response) {
				if (response && response.periodFrom) {
					const periodFromDate = new Date(response.periodFrom);
					const formattedDate = periodFromDate.toLocaleDateString('en-GB'); // "dd/MM/yyyy" format
					document.getElementById('filterStartDate').value = formattedDate;

                    loadAdvanceFeeRevenueReportByFilter();
				}
			});
		}

        function RefreshSearch() {
               $("#filterParentId").val(0),
                $("#filterParentName").val(),
                $("#filterFatherIqama").val(),
                $("#filterStudentName").val(),
                $("#filterAcademicYear").val(1),
                $("#filterInvoiceNo").val(),
                $("#filterStartDate").val(),
                $("#filterEndDate").val()
                loadAdvanceFeeRevenueReportByFilter();
        }
        function loadAdvanceFeeRevenueReportByFilter() {
            var filterDataObj = {
                ParentId: $("#filterParentId").val(),
                ParentName: $("#filterParentName").val(),
                FatherIqama: $("#filterFatherIqama").val(),
                StudentName: $("#filterStudentName").val(),
                AcademicYear: $("#filterAcademicYear").val(),
                InvoiceNo: $("#filterInvoiceNo").val(),                
                StartDate: GetDateFormat_MMMDDYYYY($("#filterStartDate").val()),
                EndDate: GetDateFormat_MMMDDYYYY($("#filterEndDate").val()),
            };
            AdvanceFeeRevenueReportLoad(filterDataObj);
        }
        function AdvanceFeeRevenueReportLoad(filterDataObj) {
            $('#advance-revenue-report-load').empty();
            $('#advance-revenue-report-load').html('<div class="row"> <div class="col-xl-12"><div class="card order-card"><span class="text-center no-text" style="color:#212529;"><img src="@Url.Content("~/images/loding.gif")"  /></span></div></div></div>');
            var urlToCall = baseUrl + 'Report/AdvanceFeeReportDataPartial';
            $app.post(urlToCall, filterDataObj).then(function (response) {
                $('#advance-revenue-report-load').html(response);
            });
        }

        function ExportCSVStatement() {
            debugger;
            var reportKey = 'advancefeetuitionrevenueexport';
            var reportName = 'Advance Fee Revenue List';
            var filterDataObj = {
                ParentId: $("#filterParentId").val(),
                ParentName: $("#filterParentName").val(),
                FatherIqama: $("#filterFatherIqama").val(),
                StudentName: $("#filterStudentName").val(),
                AcademicYear: $("#filterAcademicYear").val(),
                InvoiceNo: $("#filterInvoiceNo").val(),
                StartDate: $("#filterStartDate").val(),
                EndDate: $("#filterEndDate").val()
            };

            if (filterDataObj.InvoiceDateStart == '') {
                filterDataObj.InvoiceDateStart = getFormattedDateSearch(new Date());
            } else {
                filterDataObj.InvoiceDateStart = getFormattedDateSearch(new Date($("#InvoiceDateStart").datepicker('getDate')));
            }
            if (filterDataObj.InvoiceDateEnd == '') {
                filterDataObj.InvoiceDateEnd = getFormattedDateSearch(new Date());
            } else {
                filterDataObj.InvoiceDateEnd = getFormattedDateSearch(new Date($("#InvoiceDateEnd").datepicker('getDate')));
            }

            if (filterDataObj.InvoiceNo == '')
                filterDataObj.InvoiceNo = 0;

            var ParentIdParam = "ParentId: " + filterDataObj.ParentId;
            var ParentNameParam = "ParentName: " + filterDataObj.ParentName;
            var FatherIqamaParam = "FatherIqama: " + filterDataObj.FatherIqama;
            var StudentNameParam = "StudentName: " + filterDataObj.StudentName;
            var AcademicYearParam = "AcademicYear: " + filterDataObj.AcademicYear;
            var InvoiceNoParam = "InvoiceNo: " + filterDataObj.InvoiceNo;
            var StartDateParam = "StartDate: " + GetDateFormat_MMMDDYYYY(filterDataObj.StartDate);
            var EndDateParam = "EndDate: " + GetDateFormat_MMMDDYYYY(filterDataObj.EndDate);
            var parameters = ParentIdParam + '|' + ParentNameParam + '|' + FatherIqamaParam + '|' + StudentNameParam + '|' + AcademicYearParam + '|' + InvoiceNoParam + '|' + StartDateParam + '|' + EndDateParam;
            this.ExportCSVWithParam(reportKey, reportName, parameters);
        }

        function getFormattedPreiousMonthDateSearch(date) {
            let year = date.getFullYear();
            let month = (date.getMonth()).toString().padStart(2, '0');
            let day = date.getDate().toString().padStart(2, '0');

            return day + '/' + month + '/' + year;
        }

        function getFormattedDateSearch(date) {
            let year = date.getFullYear();
            let month = (1 + date.getMonth()).toString().padStart(2, '0');
            let day = date.getDate().toString().padStart(2, '0');

            return day + '/' + month + '/' + year;
        }
       
    </script>
}