@using School.Models.WebModels.BranchModels;
@model BranchModel

<div class="row">
    <div class="col-md-12">
        <div class="cform row gy-3">
            <input type="hidden" id="BranchId" name="BranchId" asp-for="BranchId" />
            <div class="col-xxl-6 col-md-6">
                <div>
                    <label class="form-label">Branch Name</label>
                    <input type="text" class="form-control" id="BranchName" name="BranchName" asp-for="BranchName" placeholder="Branch name">
                </div>
            </div>
            <div class="col-xxl-6 col-md-6">
                <label class="form-label">Active</label>
                <select class="form-select" name="IsActive" id="IsActive" asp-for="IsActive" aria-label="Active">
                    <option value=true>Active</option>
                    <option value=false>In-Active</option>
                </select>
            </div>
            <div class="col-md-12 text-center">
                <button class="btn btn-success theme-btn" type="button" onclick="BindData()">@(Model.BranchId > 0 ? "Update" : "Add")</button>
                <button class="btn btn-secondary" type="button" onclick="bootbox.hideAll();">Cancel</button>
            </div>
        </div>
    </div>
</div>
<script>
    function BindData() {
        var dataObj = {
            BranchId: $("#BranchId").val(),
            BranchName: $("#BranchName").val(),
            IsActive: $("#IsActive").val()
        };
        if (Validation(dataObj)) {
            if (dataObj["BranchId"] == "0") {
                Save(dataObj);

            }
            else {
                var dlg_updatePromo = bootbox.dialog({
                    message: 'Are you sure! you want to update the record?',
                    title: 'Confirm',
                    buttons: {
                        ok: {
                            label: "Yes",
                            className: 'btn-primary',
                            callback: function () {
                                Save(dataObj);
                            }
                        },
                        cancel: {
                            label: "No",
                            className: 'btn-danger',
                            callback: function () {
                                $(dlg_updatePromo).modal('hide');
                            }
                        }
                    }
                });
                dlg_updatePromo.find('.modal-header').css('background-color', '#dc3545').css('border-bottom', '1px solid #dc3545');
            }
        }
    }
    function Validation(dataObj) {
        var isError = false;
        if (!dataObj["BranchName"] || !dataObj["BranchName"].trim()) {
            $app.notify.validate("BranchName", "Branch Name English is required");
            isError = true;
        }      
        if (isError) {
            return false;
        }
        else {
            return true;
        }

    }
</script>